{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-operations.js","components/InputForm/InputForm.jsx","components/Filter/Filter.jsx","components/Phonebook/PhonebookItem.jsx","components/Phonebook/Phonebook.jsx","components/Container/Container.jsx","App.js","index.js","components/InputForm/InputForm.module.css","components/Phonebook/Phonebook.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","contacts","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","rootReducer","devTools","process","getIsLoading","getContacts","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","InputForm","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","some","item","alert","reset","test","validNumber","this","className","s","form","label","htmlFor","type","onChange","input","placeholder","autoComplete","autoFocus","btn","Component","connect","dispatch","contact","post","then","data","catch","contactsOperations","Filter","wrapper","defaultProps","actions","target","onDelete","contactId","delete","close","onClick","list","map","Container","title","children","section","heading","App","fetchContacts","isLoadingContacts","get","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff187da2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__qedQG\",\"label\":\"Filter_label__poGW2\",\"input\":\"Filter_input__wj8uF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Container_section__2TkT8\",\"heading\":\"Container_heading__18hJQ\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport rootReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: rootReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getIsLoading = state => state.contacts.loading;\r\n\r\nexport const getError = state => state.contacts.error;\r\n\r\nexport const getContacts = state => state.contacts.contacts;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector([getContacts, getFilter], (contacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter))\r\n})","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getContacts } from '../../redux/phonebook/phonebook-selectors';\r\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\nimport s from './InputForm.module.css';\r\n\r\nclass InputForm extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { contacts, onSubmit } = this.props;\r\n    const sameContact = contacts.some(\r\n      item => item.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    const validNumber = number => {\r\n      return !/^\\d[\\d\\(\\)\\ -]{4,14}\\d$/.test(number);\r\n    };\r\n\r\n    if (sameContact) {\r\n      alert(`${name} Already exists`);\r\n      this.reset();\r\n      return;\r\n    }\r\n\r\n    if (validNumber(number)) {\r\n      alert('Enter the correct number phone!');\r\n\r\n      return;\r\n    }\r\n\r\n    onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.label} htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n          id=\"name\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n        />\r\n\r\n        <label className={s.label} htmlFor=\"number\">\r\n          Number\r\n        </label>\r\n        <input\r\n          id=\"number\"\r\n          type=\"text\"\r\n          onChange={this.handleChange}\r\n          className={s.input}\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"Phone number\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) =>\r\n    dispatch(contactsOperations.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <div className={s.wrapper}>\r\n    <label className={s.label}>\r\n      Find by Name\r\n    <input className={s.input} type=\"text\" value={filter} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\nFilter.defaultProps = {\r\n  filter: ''\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filter: getFilter(state)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(actions.changeFilter(event.target.value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as contactsOperations from '../../redux/phonebook/phonebook-operations';\r\n\r\nimport s from './Phonebook.module.css';\r\n\r\nconst PhonebookItem = ({ name, number, id, onDelete }) => {\r\n  return (\r\n    <>\r\n      <span>\r\n        {name} : {number}\r\n      </span>\r\n      <button type=\"button\" className={s.close} onClick={() => onDelete(id)}>\r\n        +\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nPhonebookItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(contactsOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(PhonebookItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport PhonebookItem from './PhonebookItem';\r\nimport { getVisibleContacts } from '../../redux/phonebook/phonebook-selectors';\r\n\r\nimport s from './Phonebook.module.css';\r\n\r\nconst Phonebook = ({ contacts }) => {\r\n  return (\r\n    <>\r\n      {contacts && (\r\n        <ul className={s.list}>\r\n          {contacts.map(contact => (\r\n            <li className={s.item} key={contact.id}>\r\n              <PhonebookItem {...contact} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Phonebook);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ title, children }) => (\r\n  <section className={s.section}>\r\n    {title && <h2 className={s.heading}>{title}</h2>}\r\n    {children}\r\n  </section>\r\n);\r\nContainer.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport InputForm from './components/InputForm/InputForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport Phonebook from './components/Phonebook/Phonebook';\r\nimport Container from './components/Container/Container';\r\nimport { getIsLoading } from './redux/phonebook/phonebook-selectors';\r\nimport * as contactsOperations from './redux/phonebook/phonebook-operations';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container title=\"Phonebook\">\r\n          <InputForm />\r\n        </Container>\r\n        <Container title=\"Contacts\">\r\n          <Filter />\r\n          {this.props.isLoadingContacts && <h2> Loading contacts...</h2>}\r\n          <Phonebook />\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoadingContacts: getIsLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputForm_form__3UZBC\",\"label\":\"InputForm_label__1cwRf\",\"input\":\"InputForm_input__241QO\",\"btn\":\"InputForm_btn__24L9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Phonebook_list__13_Mt\",\"item\":\"Phonebook_item__1SteO\",\"close\":\"Phonebook_close__20U_2\"};"],"sourceRoot":""}